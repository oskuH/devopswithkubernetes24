name: Release ping-pong

on:
  push:
    paths:
      - 'part3/log-output/ping-pong/**'
      - '.github/workflows/ping-pong.yaml'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  IMAGE: ping-pong
  SERVICE: ping-pong-dep
  BRANCH: ${{ github.ref_name }}
  SOPS_AGE_KEY_FILE: ${{ secrets.SOPS_AGE_KEY_FILE }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: my-environment

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'
        
      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2
      
      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'
      
      - name: Build
        run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$BRANCH-$GITHUB_SHA" ./part3/log-output/$IMAGE

      - name: Publish
        run: docker push "gcr.io/$PROJECT_ID/$IMAGE:$BRANCH-$GITHUB_SHA"

      - name: Set up Kustomize 
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Install SOPS
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v3.9.3/sops-v3.9.3.linux.amd64
          mv sops-v3.9.3.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops

      - name: Decrypt secrets
        run: |
          mkdir -p ~/.config/sops/age
          echo "${{ secrets.SOPS_AGE_KEY_FILE }}" > ~/.config/sops/age/keys.txt
          export SOPS_AGE_KEY_FILE=~/.config/sops/age/keys.txt
          sops --decrypt part3/log-output/manifests/secret.enc.yaml > part3/log-output/manifests/secret.yaml

      - name: Create namespace
        run: |
          kubectl create namespace exercises || true
          kubectl config set-context --current --namespace=exercises

      - name: Deploy
        run: |-
          cd part3/log-output/
          kustomize edit set image PINGPONG/$IMAGE=gcr.io/$PROJECT_ID/$IMAGE:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment $SERVICE
          kubectl get services -o wide